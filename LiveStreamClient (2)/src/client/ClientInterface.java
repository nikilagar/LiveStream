/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JList;

/**
 *
 * @author vikrant
 */
public class ClientInterface extends javax.swing.JFrame implements Runnable {
    private int userID ;
    public static int myID;
    public static Socket sock;
    /**
     * Creates new form ClientInterface
     */
    public ClientInterface(int id) {
        userID = id;
        myID = id;
        initComponents();
        loadFriendList();
    }

    private void loadFriendList () {
        ArrayList<FriendInformation> friends = DBConnector.fetchBuddyList(userID);
        friendList.setListData(friends.toArray());
        
        friendList.addMouseListener(new MouseAdapter() {
            public void mouseClicked(MouseEvent evt) {
                JList list = (JList)evt.getSource();
                if (evt.getClickCount()==2) {
                    // TODO : GET ID OF FRIEND AND LAUNCH CHAT !
                    MessageManager msgRec =null;
                    try {
                    sock = new Socket(Client.SERVERIP,4321);
                    FriendInformation f = (FriendInformation) list.getSelectedValue();
                    msgRec = new MessageManager(userID,f.id);
                    System.out.println("FROM " + userID + " TO " + f.id);
                        DataOutputStream dos = new DataOutputStream(sock.getOutputStream());
                        dos.writeInt(userID);
                        dos.writeInt(f.id);
                    } catch (IOException ex) {
                        Logger.getLogger(ClientInterface.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    msgRec.setVisible(true);
                    msgRec.setLocationRelativeTo(null);
                    new Thread(msgRec).start();
                }
            }
        });
        
    }
    
    @Override
    public void run() {
        try {
            DataInputStream dis = new DataInputStream(sock.getInputStream());
            while (true) {
                int sender = dis.readInt();
                String newMsg = dis.readUTF();
                MessageManager msgRec = new MessageManager(userID,sender,newMsg);
                
                msgRec.setVisible(true);
                
                msgRec.setLocationRelativeTo(null);
                new Thread(msgRec).start();
             
            }       
        } catch (IOException ex) {
            Logger.getLogger(ClientInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addUserBut = new javax.swing.JButton();
        logOutButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        friendList = new javax.swing.JList();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Buddy List");

        addUserBut.setText("Add User");
        addUserBut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserButActionPerformed(evt);
            }
        });

        logOutButton.setText("Log Out");
        logOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logOutButtonActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(friendList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 329, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(addUserBut)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(logOutButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addUserBut)
                    .addComponent(logOutButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 434, Short.MAX_VALUE)
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void logOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logOutButtonActionPerformed
        try {
            
            Socket logoutSock = new Socket(Client.SERVERIP,1234);
            DataOutputStream dos = new DataOutputStream(logoutSock.getOutputStream());
            dos.writeInt(userID);
            
            dos.close();
            logoutSock.close();
            
            setVisible(false);
            
            LoginPanel login = new LoginPanel();
            login.setVisible(true);
            login.setLocationRelativeTo(null);
            
        } catch (IOException ex) {
            Logger.getLogger(ClientInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_logOutButtonActionPerformed

    private void addUserButActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserButActionPerformed
        // TODO add your handling code here:
        AddUserPanel add = new AddUserPanel();
        add.setVisible(true);
        add.setLocationRelativeTo(null);
    }//GEN-LAST:event_addUserButActionPerformed

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ClientInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ClientInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ClientInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ClientInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            @Override
//            public void run() {
//                new ClientInterface().setVisible(true);
//            }
//        });
//        
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addUserBut;
    private javax.swing.JList friendList;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton logOutButton;
    // End of variables declaration//GEN-END:variables

}
